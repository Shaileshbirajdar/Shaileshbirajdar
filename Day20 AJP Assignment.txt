ExamApplication.java

package in.edac;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class ExamApplication {

	public static void main(String[] args) {
		SpringApplication.run(ExamApplication.class, args);
	}

}


MyJspActions.java
package in.edac;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

@Controller
@RequestMapping("/my-jsp")
public class MyJspActions {

	@Autowired
	UserRepository userRepository;
	
	/**
	 * http://localhost:8080/my-jsp/
	 * @return
	 */
	@GetMapping("/")
	public String firstJsp() {
		// first.jsp
		// /views/first.jsp
		return "first";
	}
	
	
	/**
	 * http://localhost:8080/my-jsp/second
	 * @return
	 */
	@GetMapping("/second")
	public ModelAndView secondJsp() {
		ModelAndView mv = new ModelAndView("second");
		
		List<User> list =  userRepository.findAll();
		mv.addObject("userList", list);
		
		return mv;
	}
	
	
	@GetMapping("/register")
	public ModelAndView register() {
		ModelAndView mv = new ModelAndView("register");
		return mv;
	}
	
	
	
	@PostMapping("/upload-demo-v2")
	public String fileUploadRestDemoV2(MultipartFile myfile, User user) throws IllegalStateException, IOException {
		
		long randomNumber = System.currentTimeMillis();
		String storagePath = "/Users/research/Desktop/storage/";
		String desinationPath = storagePath + randomNumber + ".jpg";
		myfile.transferTo(new File(desinationPath));
		
		user.setProfileImage(randomNumber + ".jpg");

		// db call
		userRepository.save(user);
		
		// IMSRORRY!!!
		// return "forward:/my-jsp/second" ;
		return "redirect:/my-jsp/second" ;
		// return "second"
	}
	
}

MyRestActions.java 
package in.edac;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping("/my")
public class MyRestActions {
	
	@Autowired
	UserRepository userRepository;

	
	/**
	 * http://localhost:8080/my/
	 * @return
	 */
	@GetMapping("/")
	public String sayHi() {
		return "Hiiiiii";
	}
	
	
	/**
	 * http://localhost:8080/my/list
	 * @return
	 */
	@GetMapping("/list")
	public List<String> myList() {
		return Arrays.asList("DELHI", "KOLKATA", "CHENNAI", "MUMBAI");
	}
	
	
	/**
	 * http://localhost:8080/my/upload-demo
	 * @return
	 * @throws IOException 
	 * @throws IllegalStateException 
	 */
	@PostMapping("/upload-demo")
	public String fileUploadRestDemo(MultipartFile myfile, String username) throws IllegalStateException, IOException {
		
		System.out.println(myfile);
		// /Users/research/Desktop/storage
		
		myfile.transferTo(new File("/Users/research/Desktop/storage/3.jpg"));
		
		return "File Upload Demo " + username;
	}
	
	
	
	@PostMapping("/upload-demo-v1")
	public String fileUploadRestDemoV1(MultipartFile myfile, String username) throws IllegalStateException, IOException {
		
		long randomNumber = System.currentTimeMillis();
		String storagePath = "/Users/research/Desktop/storage/";
		String desinationPath = storagePath + randomNumber + ".jpg";
		
		myfile.transferTo(new File(desinationPath));
		
		return "File Upload Demo " + username;
	}
	
	
	
	@PostMapping("/upload-demo-v2")
	public String fileUploadRestDemoV2(MultipartFile myfile, User user) throws IllegalStateException, IOException {
		
		long randomNumber = System.currentTimeMillis();
		String storagePath = "/Users/research/Desktop/storage/";
		String desinationPath = storagePath + randomNumber + ".jpg";
		myfile.transferTo(new File(desinationPath));
		
		user.setProfileImage(randomNumber + ".jpg");

		// db call
		userRepository.save(user);
		
		return "File Upload Demo " ;
	}
	
}


ServletInitializer.java 
package in.edac;

import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;

public class ServletInitializer extends SpringBootServletInitializer {

	@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
		return application.sources(ExamApplication.class);
	}

}


User.java 

package in.edac;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class User {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private int id;
	private String username;
	private String password;
	private String email;
	private String mobile;
	private String profileImage;
	

	public User() {
		super();
	}
	
	
	

	public User(String username, String password, String email, String mobile, String profileImage) {
		super();
		this.username = username;
		this.password = password;
		this.email = email;
		this.mobile = mobile;
		this.profileImage = profileImage;
	}




	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getMobile() {
		return mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	public String getProfileImage() {
		return profileImage;
	}

	public void setProfileImage(String profileImage) {
		this.profileImage = profileImage;
	}

}

UserRepository.java 
package in.edac;

import org.springframework.data.jpa.repository.JpaRepository;

public interface UserRepository  extends JpaRepository<User, Integer>{

}