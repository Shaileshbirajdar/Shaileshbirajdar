HibernateDemo.java
package in.edac;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HibernateDemo {
	public static void main(String[] args) {
		
		// Making Your Progarm hibernate Aware
		SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
		// new Configuration().configure().buildSessionFactory();
		
		System.out.println("HBM2DDL");
	}
	
	
}

HibernateDemo1.java
package in.edac;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HibernateDemo1 {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

	public static void main(String[] args) {
		System.out.println("HBM2DDL");
	}

}

HibernateDemo2.java
package in.edac;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class HibernateDemo2 {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

	public static void main(String[] args) {
		Transaction tx = null;
		try {
			Session session =  sessionFactory.openSession();
			
			// diabling the default nauter :: autocmmit;
			tx = session.beginTransaction();
			
			session.save("A");
			
			// ....more opetaion
			
			session.save("B");
			
			
			tx.commit();
			session.close();
		} catch(Exception e) {
			tx.rollback();
			e.printStackTrace();
		}
		
	}


}

HibernateDemo3.java 

package in.edac;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class HibernateDemo3 {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

	public static void main(String[] args) {
		
		Session session = sessionFactory.openSession();
		Transaction tx = session.beginTransaction();

		Person p = new Person();
		p.setFirstName("edac");
		p.setMiddleName("edac middle name");
		p.setLastName("edac lst name");
		
		// DML :: CREAET/INSERT
		session.save(p);
		
		tx.commit();
		session.close();
	}

}

HibernateDemo4.java
package in.edac;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class HibernateDemo4 {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

	public static void main(String[] args) {
		// create();
		// update();
		// delete();
		udpateSpecificColumn();
	}
	
	
	public static void udpateSpecificColumn() {
		Session session =  sessionFactory.openSession();
		Transaction tx =  session.beginTransaction();
		
		Person p = session.find(Person.class, 2);
		p.setFirstName("INDIA");
		
		session.update(p);
		
		tx.commit();
		session.close();
	}
	
	
	public static void delete() {
		Session session =  sessionFactory.openSession();
		Transaction tx =  session.beginTransaction();
		
		Person p = new Person();
		p.setId(1);
		
		session.delete(p);
		
		tx.commit();
		session.close();
	}
	
	
	public static void update() {
		Session session =  sessionFactory.openSession();
		Transaction tx =  session.beginTransaction();
		
		Person p = new Person();
		p.setId(2);
		p.setFirstName("india");
		p.setMiddleName("bharat");
		p.setLastName("hindustan");
		
		session.update(p);
		
		tx.commit();
		session.close();
	}
	
	
	public static void create() {
		
		Session session = sessionFactory.openSession();
		Transaction tx = session.beginTransaction();

		Person p = new Person();
		p.setFirstName("edac");
		p.setMiddleName("edac middle name");
		p.setLastName("edac lst name");
		
		// DML :: CREAET/INSERT
		session.save(p);
		
		tx.commit();
		session.close();
	}

}


HibernateDemo5.java 

package in.edac;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

// DQL
public class HibernateDemo5 {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

	public static void main(String[] args) {
		Session session =  sessionFactory.openSession();
	
		// DQL
		List<Person> list = session.createQuery("FROM Person", Person.class).list();
		System.out.println(list);
		
		session.close();
	}
	
	
	
}

HibernateDemo6.java
package in.edac;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

// 
public class HibernateDemo6 {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

	public static void main(String[] args) {
		dqlSqlDemo3();
	}
	
	
	// DQL :: SELECT
	public static void dqlSqlDemo() {
		Session session = sessionFactory.openSession(); 
		
		String sql = "SELECT * FROM USER";
		List<User> list = session.createNativeQuery(sql, User.class).getResultList();
		
		list.stream().map(p -> p.getUsername()).forEach(System.out::println);
		
		session.close();
	}
	
	
	public static void dqlSqlDemo1() {
		Session session = sessionFactory.openSession(); 
		
		// ? => Positional Paramter
		String sql = "SELECT * FROM USER WHERE id=?";
		
		List<User> list =  session.createNativeQuery(sql, User.class)
									.setParameter(1, 10)
									.list();
		
		list.stream().map(p -> p.getUsername()).forEach(System.out::println);
		session.close();
	}
	
	
	public static void dqlSqlDemo2() {
		Session session = sessionFactory.openSession(); 
		
		// ? => :id => Named Parameter 
		String sql = "SELECT * FROM USER WHERE id=:id";
		
		List<User> list =  session.createNativeQuery(sql, User.class)
									.setParameter("id", 11)
									.list();
		
		list.stream().map(p -> p.getUsername()).forEach(System.out::println);
		session.close();
	}
	
	
	
	// DML :: INSERT
	public static void dqlSqlDemo3() {
		Session session = sessionFactory.openSession(); 
		Transaction tx = session.beginTransaction();
		
		String sql = "INSERT INTO USER (id, username, email) VALUES (:id, :username, :email)";
		session.createNativeQuery(sql, User.class)
			.setParameter("id", 999)
			.setParameter("username", "INDIA")
			.setParameter("email", "india@gmail.com")
			.executeUpdate();
		
		
		tx.commit();
		session.close();
	}
	
	
	
}

HibernateDemo7.java 
package in.edac;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class HibernateDemo7 {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();

	public static void main(String[] args) {
		Session session =  sessionFactory.openSession();
		Transaction tx = session.beginTransaction();
		
		for(int i=0; i<10; i++) {
			User user = new User();
			user.setUsername("Test " + i);
			user.setEmail("test@gmail.com" + i);
			
			session.save(user);
		}
		
		
		tx.commit();
		session.close();
	}
	
	
	
}

HibernateUtil.java 
package in.edac;

import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HibernateUtil {
	public static final SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
}

Person.java 
package in.edac;

import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

@Entity
public class Person implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue
	private int id;
	private String firstName;
	private String middleName;
	private String lastName;
	
	
	// ZERO CONSTRUCTOR
	public Person() {
		super();
	}

	public Person(int id, String firstName, String middleName, String lastName) {
		super();
		this.id = id;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getMiddleName() {
		return middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

}

Student.java 
package in.edac;

import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.Id;

@Entity
public class Student implements Serializable {
	private static final long serialVersionUID = 1L;

	private int myid;
	
	@Id
	private String name;
	private String email;
	private String mobile;

	

	public int getMyid() {
		return myid;
	}

	public void setMyid(int myid) {
		this.myid = myid;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getMobile() {
		return mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

}

User.java 
package in.edac;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "USER")
public class User {

	@Id
	@GeneratedValue
	private int id;
	private String username;
	private String email;
	private String mobile;

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getMobile() {
		return mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

}